{"ast":null,"code":"var _jsxFileName = \"/home/rex/Desktop/react/test/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [step, setStep] = useState(1);\n  let currentDate = new Date();\n  function handleReset() {\n    setCount(0);\n    setStep(0);\n  }\n  function updateDate() {\n    currentDate.setDate(currentDate.getDate() + count);\n    let updatedDate = currentDate.toDateString();\n    return updatedDate;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"7\",\n        value: step,\n        onChange: e => setStep(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: step\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev_count\",\n        onClick: () => setCount(count - step),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: count,\n        onChange: e => setCount(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next_count\",\n        onClick: () => setCount(count + step),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count === 0 ? `Today is ${updateDate()}` : count > 0 ? `${count} days from today is ${updateDate()}` : `${count * -1} days ago was ${updateDate()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0qctxLJmImnmVnjI2X81AgRQYJw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","count","setCount","step","setStep","currentDate","Date","handleReset","updateDate","setDate","getDate","updatedDate","toDateString","className","children","type","min","max","value","onChange","e","Number","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/rex/Desktop/react/test/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const [step, setStep] = useState(1);\n  let currentDate = new Date();\n\n  function handleReset() {\n    setCount(0);\n    setStep(0);\n  }\n\n  function updateDate() {\n    currentDate.setDate(currentDate.getDate() + count);\n    let updatedDate = currentDate.toDateString();\n    return updatedDate;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"steps\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"7\"\n          value={step}\n          onChange={(e) => setStep(Number(e.target.value))}\n        />\n        <span>{step}</span>\n        {/* <button className=\"prev_step\" onClick={() => setStep(step - 1)}>\n          -\n        </button> */}\n        {/* <p>Step: {step}</p>\n        <button className=\"next_step\" onClick={() => setStep(step + 1)}>\n          +\n        </button> */}\n      </div>\n      <div className=\"steps\">\n        <button className=\"prev_count\" onClick={() => setCount(count - step)}>\n          -\n        </button>\n        <input\n          type=\"number\"\n          value={count}\n          onChange={(e) => setCount(Number(e.target.value))}\n        />\n        <button className=\"next_count\" onClick={() => setCount(count + step)}>\n          +\n        </button>\n      </div>\n      <p>\n        {count === 0\n          ? `Today is ${updateDate()}`\n          : count > 0\n          ? `${count} days from today is ${updateDate()}`\n          : `${count * -1} days ago was ${updateDate()}`}\n      </p>\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}